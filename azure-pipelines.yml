# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: terraformstaticcodeanalyzer@1
  inputs:
    tfsecversion: '0.58.6'

- script: tsfsec .
  continueOnError: true
  
- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'

- task: TerraformCLI@0
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: 'azure(9909fced-8203-44b6-af68-11f833a37e60)'
    allowTelemetryCollection: true

- task: TerraformCLI@0
  inputs:
    command: 'plan'
    environmentServiceName: 'azure(9909fced-8203-44b6-af68-11f833a37e60)'
    runAzLogin: true
    allowTelemetryCollection: true
- task: TerraformCLI@0
  inputs:
    command: 'import'
    environmentServiceName: 'azure(9909fced-8203-44b6-af68-11f833a37e60)'
    runAzLogin: true
    allowTelemetryCollection: true
    resourceAddress: 'cluster.azurerm_resource_group.aks-getting-started'
    resourceId: '/subscriptions/9909fced-8203-44b6-af68-11f833a37e60/resourceGroups/aks-getting-started'
  continueOnError: true
- task: TerraformCLI@0
  inputs:
    command: 'apply'
    environmentServiceName: 'azure(9909fced-8203-44b6-af68-11f833a37e60)'
    runAzLogin: true
    allowTelemetryCollection: true
